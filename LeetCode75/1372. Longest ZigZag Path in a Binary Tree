# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def longestZigZag(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        self.Max = 0
        self.leftDfs(root, 0, [])
        self.rightDfs(root, 0, [])
        
        return self.Max

    def rightDfs(self, now, dept, path):
        if now.right == None:
            print(path, dept)
            self.Max = max(dept, self.Max)
            return 
        path.append("R")
        self.leftDfs(now.right, dept+1, path)
        
    def leftDfs(self, now, dept, path):
        if now.left == None :
            print(path, dept)
            self.Max = max(dept, self.Max)
            return
        path.append("L")
        print("Left",now.left, "right",now.right)
        self.rightDfs(now.left, dept+1, path)

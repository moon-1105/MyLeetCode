class Solution:
    def longestCommonSubsequence(self, text1: str, text2: str) -> int:
        DP = []
        n,m = len(text1), len(text2)
        for _ in range(n):
            DP.append([0]*m)
        
        if text1[0] == text2[0] :
            for i in range(0,n):
                DP[i][0] = 1 
            for j in range(0,m):
                DP[0][j] = 1 

        for i in range(0,n):
            for j in range(0,m):
                if text1[i] == text2[j]:
                    if i==0 or j ==0 :
                        DP[i][j] == 1
                    else : 
                        DP[i][j] = max(DP[i][j-1],DP[i-1][j])+1
                else :
                    if i==0 or j ==0 :
                        DP[i][j] == 0
                    DP[i][j] = max(DP[i][j-1],DP[i-1][j])
        #print(DP)
        return DP[n-1][m-1]

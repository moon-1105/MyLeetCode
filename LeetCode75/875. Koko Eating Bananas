
class Solution(object):
    def minEatingSpeed(self, piles, h):
        """
        :type piles: List[int]
        :type h: int
        :rtype: int
        """
        #sum(math.ceil(piles[i]/k)) == h
        low, high = 1, max(piles)
        while low <= high :
            k = (low+high)//2
            #print(k, low, high)
            chk = 0
            for pile in piles :
                chk += math.ceil(float(pile)/k)

            if chk > h :
                low = k + 1 
            else:
                high = k - 1 
        #움직이지 않는 lowest 를 찾는거니까 
        return low
        
        

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
arr = []
def dfs(now, depth):
    if now == None:
        return depth
    left = now.left
    right = now.right
    if left==None and right==None:
        arr.append(depth)
        return depth
    elif left==None:
        dfs(right, depth+1)
    elif right==None:
        dfs(left, depth+1)
    else:
        dfs(left, depth+1)
        dfs(right, depth+1)

class Solution(object):
    def maxDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        dfs(root, 1)
        global arr
        ans = max(arr)
        arr = []
        return ans

        
